ノック51 : 物流に関するデータの読み込み
特になし
ノック52 : 現状の輸送量、コストの確認
str(A) : Aを文字列型に変換
series.sum() : 列の合計を計算
ノック53 : ネットワークの可視化
NetworkX : Pythonでグラフ・ネットワークを扱うことが可能なライブラリ import networkx as nx として使うのが慣例
nx.Graph() : 無向グラフのオブジェクトを作成
Graph.add_node("A") : (空の)グラフにノードを追加、この場合はAというノード
Graph.add_edge("A", "B") : ノードとノードを繋ぐエッジの追加, この場合はAとBを繋ぐ
nx.draw(Graph, pos) : グラフオブジェクトの描画
    pos : 辞書形式を指定 {ノード名 : [X座標, Y座標]}
ノック54 : ネットワークのノード(頂点)の追加
nx.draw(Graph, pos, with_labels=True)
    with_labels=True : 頂点につけたラベルを表示する
ノック55 : ルートの重みづけの実施
特になし
ノック56 : 輸送ルート情報の読み込み

ノック57 : 輸送ルート情報からネットワークの可視化

ノック58 : 輸送コスト関数の作成

ノック59 : 制約条件の作成

ノック60 : 輸送ルートの変更、輸送コスト関数の変化の確認